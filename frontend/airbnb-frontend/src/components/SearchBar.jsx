import { useState } from "react";
import styles from "../styles/SearchBar.module.css";

const continents = [
  "–°–µ–≤–µ—Ä–Ω–∞—è –ê–º–µ—Ä–∏–∫–∞",
  "–Æ–∂–Ω–∞—è –ê–º–µ—Ä–∏–∫–∞",
  "–ï–≤—Ä–æ–ø–∞",
  "–ê–∑–∏—è",
  "–ê—Ñ—Ä–∏–∫–∞",
  "–ê–≤—Å—Ç—Ä–∞–ª–∏—è",
  "–ê–Ω—Ç–∞—Ä–∫—Ç–∏–¥–∞",
];

const SearchBar = ({ onFocus, onBlur }) => {
  const [isLocationOpen, setIsLocationOpen] = useState(false);
  const [isDateOpen, setIsDateOpen] = useState(false);
  const [isDateOutOpen, setIsDateOutOpen] = useState(false);
  const [location, setLocation] = useState("");
  const [checkIn, setCheckIn] = useState("");
  const [checkOut, setCheckOut] = useState("");
  const [guests, setGuests] = useState(1);

  return (
    <div className={styles.searchContainer} onFocus={onFocus} onBlur={onBlur}>
      <div className={styles.searchBar}>
        {/* –õ–æ–∫–∞—Ü–∏—è */}
        <div className={styles.searchField}>
          <input
            type="text"
            placeholder="–ö—É–¥–∞"
            value={location}
            onClick={() => setIsLocationOpen(!isLocationOpen)}
            readOnly
          />
          {isLocationOpen && (
            <div className={styles.dropdown}>
              {continents.map((continent) => (
                <div
                  key={continent}
                  className={styles.option}
                  onClick={() => {
                    setLocation(continent);
                    setIsLocationOpen(false);
                  }}
                >
                  {continent}
                </div>
              ))}
            </div>
          )}
        </div>

        {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
        <div className={styles.divider} />

        {/* –î–∞—Ç–∞ –ø—Ä–∏–±—ã—Ç–∏—è */}
        <div className={styles.searchField}>
          <input
            type="text"
            placeholder="–ü—Ä–∏–±—ã—Ç–∏–µ"
            value={checkIn}
            onFocus={() => setIsDateOpen(true)}
            readOnly
          />
          {isDateOpen && (
            <div className={styles.calendar}>
              <input
                type="date"
                onChange={(e) => {
                  setCheckIn(e.target.value);
                  setIsDateOpen(false);
                }}
              />
            </div>
          )}
        </div>

        {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
        <div className={styles.divider} />

        {/* –î–∞—Ç–∞ –æ—Ç–±—ã—Ç–∏—è */}
        <div className={styles.searchField}>
          <input
            type="text"
            placeholder="–û—Ç–±—ã—Ç–∏–µ"
            value={checkOut}
            onFocus={() => setIsDateOutOpen(true)}
            readOnly
          />
          {isDateOutOpen && (
            <div className={styles.calendar}>
              <input
                type="date"
                onChange={(e) => {
                  setCheckOut(e.target.value);
                  setIsDateOutOpen(false);
                }}
              />
            </div>
          )}
        </div>

        {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
        <div className={styles.divider} />

        {/* –ì–æ—Å—Ç–∏ */}
        <select value={guests} onChange={(e) => setGuests(e.target.value)}>
          {[...Array(10).keys()].map((num) => (
            <option key={num + 1} value={num + 1}>
              {num + 1} {num === 0 ? "–≥–æ—Å—Ç—å" : "–≥–æ—Å—Ç–µ–π"}
            </option>
          ))}
        </select>

        {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞ */}
        <button type="submit">üîç</button>
      </div>
    </div>
  );
};

export default SearchBar;
