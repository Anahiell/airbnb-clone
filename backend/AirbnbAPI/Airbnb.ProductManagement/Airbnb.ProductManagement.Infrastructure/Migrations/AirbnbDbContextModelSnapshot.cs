// <auto-generated />
using System;
using Airbnb.Infrastructure.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Airbnb.Infrastructure.Migrations
{
    [DbContext(typeof(AirbnbDbContext))]
    partial class AirbnbDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Airbnb.Domain.BoundedContexts.AddressManagement.Aggregates.AddressLegal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("AddressLegal");
                });

            modelBuilder.Entity("Airbnb.Domain.BoundedContexts.PropertyTypeManagement.Aggregates.ApartmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PropertyType");

                    b.HasKey("Id");

                    b.ToTable("ApartmentType");
                });

            modelBuilder.Entity("Airbnb.Domain.DomainProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressLegalId")
                        .HasColumnType("int");

                    b.Property<int>("ApartmentTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressLegalId");

                    b.HasIndex("ApartmentTypeId");

                    b.ToTable("DomainProduct");
                });

            modelBuilder.Entity("Airbnb.Infrastructure.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Airbnb.Domain.BoundedContexts.AddressManagement.Aggregates.AddressLegal", b =>
                {
                    b.OwnsOne("Airbnb.Domain.BoundedContexts.ProductManagement.ValueObjects.Address.AddressEnteties.Block", "Block", b1 =>
                        {
                            b1.Property<int>("AddressLegalId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Block");

                            b1.HasKey("AddressLegalId");

                            b1.ToTable("AddressLegal");

                            b1.WithOwner()
                                .HasForeignKey("AddressLegalId");
                        });

                    b.OwnsOne("Airbnb.Domain.BoundedContexts.ProductManagement.ValueObjects.Address.AddressEnteties.City", "City", b1 =>
                        {
                            b1.Property<int>("AddressLegalId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("City");

                            b1.HasKey("AddressLegalId");

                            b1.ToTable("AddressLegal");

                            b1.WithOwner()
                                .HasForeignKey("AddressLegalId");
                        });

                    b.OwnsOne("Airbnb.Domain.BoundedContexts.ProductManagement.ValueObjects.Address.AddressEnteties.Country", "Country", b1 =>
                        {
                            b1.Property<int>("AddressLegalId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Country");

                            b1.HasKey("AddressLegalId");

                            b1.ToTable("AddressLegal");

                            b1.WithOwner()
                                .HasForeignKey("AddressLegalId");
                        });

                    b.OwnsOne("Airbnb.Domain.BoundedContexts.ProductManagement.ValueObjects.Address.AddressEnteties.District", "District", b1 =>
                        {
                            b1.Property<int>("AddressLegalId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("District");

                            b1.HasKey("AddressLegalId");

                            b1.ToTable("AddressLegal");

                            b1.WithOwner()
                                .HasForeignKey("AddressLegalId");
                        });

                    b.OwnsOne("Airbnb.Domain.BoundedContexts.ProductManagement.ValueObjects.Address.AddressEnteties.Flat", "Flat", b1 =>
                        {
                            b1.Property<int>("AddressLegalId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Flat");

                            b1.HasKey("AddressLegalId");

                            b1.ToTable("AddressLegal");

                            b1.WithOwner()
                                .HasForeignKey("AddressLegalId");
                        });

                    b.OwnsOne("Airbnb.Domain.BoundedContexts.ProductManagement.ValueObjects.Address.AddressEnteties.House", "House", b1 =>
                        {
                            b1.Property<int>("AddressLegalId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("House");

                            b1.HasKey("AddressLegalId");

                            b1.ToTable("AddressLegal");

                            b1.WithOwner()
                                .HasForeignKey("AddressLegalId");
                        });

                    b.OwnsOne("Airbnb.Domain.BoundedContexts.ProductManagement.ValueObjects.Address.AddressEnteties.Region", "Region", b1 =>
                        {
                            b1.Property<int>("AddressLegalId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Region");

                            b1.HasKey("AddressLegalId");

                            b1.ToTable("AddressLegal");

                            b1.WithOwner()
                                .HasForeignKey("AddressLegalId");
                        });

                    b.Navigation("Block");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("District");

                    b.Navigation("Flat");

                    b.Navigation("House");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Airbnb.Domain.DomainProduct", b =>
                {
                    b.HasOne("Airbnb.Domain.BoundedContexts.AddressManagement.Aggregates.AddressLegal", "AddressLegal")
                        .WithMany()
                        .HasForeignKey("AddressLegalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Airbnb.Domain.BoundedContexts.PropertyTypeManagement.Aggregates.ApartmentType", "ApartmentType")
                        .WithMany()
                        .HasForeignKey("ApartmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressLegal");

                    b.Navigation("ApartmentType");
                });
#pragma warning restore 612, 618
        }
    }
}
